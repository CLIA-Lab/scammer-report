// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/report/report.proto

package scammer_report

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's report.
type AddReportRequest struct {
	UserReport           *UserReport `protobuf:"bytes,1,opt,name=user_report,json=userReport,proto3" json:"user_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddReportRequest) Reset()         { *m = AddReportRequest{} }
func (m *AddReportRequest) String() string { return proto.CompactTextString(m) }
func (*AddReportRequest) ProtoMessage()    {}
func (*AddReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1926ef81aa8e283f, []int{0}
}

func (m *AddReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReportRequest.Unmarshal(m, b)
}
func (m *AddReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReportRequest.Marshal(b, m, deterministic)
}
func (m *AddReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReportRequest.Merge(m, src)
}
func (m *AddReportRequest) XXX_Size() int {
	return xxx_messageInfo_AddReportRequest.Size(m)
}
func (m *AddReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddReportRequest proto.InternalMessageInfo

func (m *AddReportRequest) GetUserReport() *UserReport {
	if m != nil {
		return m.UserReport
	}
	return nil
}

// The response message containing the greetings
type AddReportReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReportReply) Reset()         { *m = AddReportReply{} }
func (m *AddReportReply) String() string { return proto.CompactTextString(m) }
func (*AddReportReply) ProtoMessage()    {}
func (*AddReportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1926ef81aa8e283f, []int{1}
}

func (m *AddReportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReportReply.Unmarshal(m, b)
}
func (m *AddReportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReportReply.Marshal(b, m, deterministic)
}
func (m *AddReportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReportReply.Merge(m, src)
}
func (m *AddReportReply) XXX_Size() int {
	return xxx_messageInfo_AddReportReply.Size(m)
}
func (m *AddReportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReportReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReportReply proto.InternalMessageInfo

func (m *AddReportReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message containing the user's report.
type GetReportRequest struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportRequest) Reset()         { *m = GetReportRequest{} }
func (m *GetReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportRequest) ProtoMessage()    {}
func (*GetReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1926ef81aa8e283f, []int{2}
}

func (m *GetReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportRequest.Unmarshal(m, b)
}
func (m *GetReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportRequest.Marshal(b, m, deterministic)
}
func (m *GetReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportRequest.Merge(m, src)
}
func (m *GetReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportRequest.Size(m)
}
func (m *GetReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportRequest proto.InternalMessageInfo

func (m *GetReportRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// The response message containing the greetings
type GetReportReply struct {
	UserReport           *UserReport `protobuf:"bytes,1,opt,name=user_report,json=userReport,proto3" json:"user_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetReportReply) Reset()         { *m = GetReportReply{} }
func (m *GetReportReply) String() string { return proto.CompactTextString(m) }
func (*GetReportReply) ProtoMessage()    {}
func (*GetReportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1926ef81aa8e283f, []int{3}
}

func (m *GetReportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportReply.Unmarshal(m, b)
}
func (m *GetReportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportReply.Marshal(b, m, deterministic)
}
func (m *GetReportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportReply.Merge(m, src)
}
func (m *GetReportReply) XXX_Size() int {
	return xxx_messageInfo_GetReportReply.Size(m)
}
func (m *GetReportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportReply proto.InternalMessageInfo

func (m *GetReportReply) GetUserReport() *UserReport {
	if m != nil {
		return m.UserReport
	}
	return nil
}

//The user's report
type UserReport struct {
	PublicKey            string               `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Description          []string             `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty"`
	HashTransaction      string               `protobuf:"bytes,3,opt,name=hash_transaction,json=hashTransaction,proto3" json:"hash_transaction,omitempty"`
	Send                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=send,proto3" json:"send,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserReport) Reset()         { *m = UserReport{} }
func (m *UserReport) String() string { return proto.CompactTextString(m) }
func (*UserReport) ProtoMessage()    {}
func (*UserReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_1926ef81aa8e283f, []int{4}
}

func (m *UserReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReport.Unmarshal(m, b)
}
func (m *UserReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReport.Marshal(b, m, deterministic)
}
func (m *UserReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReport.Merge(m, src)
}
func (m *UserReport) XXX_Size() int {
	return xxx_messageInfo_UserReport.Size(m)
}
func (m *UserReport) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReport.DiscardUnknown(m)
}

var xxx_messageInfo_UserReport proto.InternalMessageInfo

func (m *UserReport) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *UserReport) GetDescription() []string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UserReport) GetHashTransaction() string {
	if m != nil {
		return m.HashTransaction
	}
	return ""
}

func (m *UserReport) GetSend() *timestamp.Timestamp {
	if m != nil {
		return m.Send
	}
	return nil
}

func init() {
	proto.RegisterType((*AddReportRequest)(nil), "report.AddReportRequest")
	proto.RegisterType((*AddReportReply)(nil), "report.AddReportReply")
	proto.RegisterType((*GetReportRequest)(nil), "report.GetReportRequest")
	proto.RegisterType((*GetReportReply)(nil), "report.GetReportReply")
	proto.RegisterType((*UserReport)(nil), "report.UserReport")
}

func init() { proto.RegisterFile("pkg/report/report.proto", fileDescriptor_1926ef81aa8e283f) }

var fileDescriptor_1926ef81aa8e283f = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xc1, 0x6a, 0xea, 0x40,
	0x14, 0x86, 0xcd, 0x55, 0xbc, 0xe4, 0x08, 0x5e, 0x99, 0xc5, 0xbd, 0x41, 0xb8, 0x54, 0x42, 0x17,
	0xb6, 0xe0, 0x84, 0xea, 0x03, 0x14, 0x5b, 0x8a, 0x94, 0xba, 0x0a, 0x76, 0xd3, 0x8d, 0x4c, 0x92,
	0xd3, 0x18, 0x4c, 0x9c, 0xe9, 0xcc, 0x64, 0x91, 0x57, 0xe8, 0x93, 0xf4, 0x31, 0x8b, 0x93, 0xc4,
	0xa8, 0x14, 0x0a, 0x5d, 0x25, 0xf3, 0xcf, 0x7f, 0xbe, 0x73, 0xe6, 0xfc, 0xf0, 0x4f, 0x6c, 0x63,
	0x4f, 0xa2, 0xe0, 0x52, 0x57, 0x1f, 0x2a, 0x24, 0xd7, 0x9c, 0x74, 0xcb, 0xd3, 0xf0, 0x22, 0xe6,
	0x3c, 0x4e, 0xd1, 0x33, 0x6a, 0x90, 0xbf, 0x7a, 0x3a, 0xc9, 0x50, 0x69, 0x96, 0x89, 0xd2, 0xe8,
	0x2e, 0x60, 0x30, 0x8f, 0x22, 0xdf, 0xb8, 0x7d, 0x7c, 0xcb, 0x51, 0x69, 0x32, 0x83, 0x5e, 0xae,
	0x50, 0xae, 0x4b, 0x86, 0x63, 0x8d, 0xac, 0x71, 0x6f, 0x4a, 0x68, 0xd5, 0xe0, 0x59, 0xa1, 0xac,
	0xfc, 0x90, 0x1f, 0xfe, 0xdd, 0x6b, 0xe8, 0x1f, 0x81, 0x44, 0x5a, 0x10, 0x07, 0x7e, 0x67, 0xa8,
	0x14, 0x8b, 0xd1, 0x20, 0x6c, 0xbf, 0x3e, 0xba, 0x37, 0x30, 0x58, 0xa0, 0x3e, 0x6d, 0xfa, 0x1f,
	0x40, 0xe4, 0x41, 0x9a, 0x84, 0xeb, 0x2d, 0x16, 0x55, 0x81, 0x5d, 0x2a, 0x4f, 0x58, 0xb8, 0x0f,
	0xd0, 0x3f, 0x2a, 0xd9, 0xe3, 0x7f, 0x34, 0xe5, 0x87, 0x05, 0xd0, 0x5c, 0x7d, 0xd3, 0x94, 0x8c,
	0xa0, 0x17, 0xa1, 0x0a, 0x65, 0x22, 0x74, 0xc2, 0x77, 0xce, 0xaf, 0x51, 0x7b, 0x6c, 0xfb, 0xc7,
	0x12, 0xb9, 0x82, 0xc1, 0x86, 0xa9, 0xcd, 0x5a, 0x4b, 0xb6, 0x53, 0x2c, 0x34, 0xb6, 0xb6, 0xc1,
	0xfc, 0xd9, 0xeb, 0xab, 0x46, 0x26, 0x14, 0x3a, 0x0a, 0x77, 0x91, 0xd3, 0x31, 0x83, 0x0e, 0x69,
	0x99, 0x0c, 0xad, 0x93, 0xa1, 0xab, 0x3a, 0x19, 0xdf, 0xf8, 0xa6, 0xef, 0x16, 0x74, 0xab, 0x31,
	0x6f, 0xc1, 0x3e, 0xec, 0x96, 0x38, 0xf5, 0x13, 0xcf, 0x73, 0x1b, 0xfe, 0xfd, 0xe2, 0x46, 0xa4,
	0x85, 0xdb, 0xda, 0x03, 0x0e, 0xdb, 0x6b, 0x00, 0xe7, 0x19, 0x34, 0x80, 0xd3, 0x55, 0xbb, 0xad,
	0xbb, 0xcb, 0x17, 0x37, 0x4e, 0xf4, 0x26, 0x0f, 0x68, 0xc8, 0x33, 0xef, 0x7e, 0xf9, 0x38, 0x9f,
	0x2c, 0x59, 0xe0, 0xa9, 0x90, 0x65, 0x19, 0xca, 0x49, 0x59, 0x16, 0x74, 0xcd, 0x63, 0x66, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x87, 0x15, 0x2c, 0xc2, 0x97, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReportClient is the client API for Report service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportClient interface {
	// Get Report
	AddReport(ctx context.Context, in *AddReportRequest, opts ...grpc.CallOption) (*AddReportReply, error)
	GetReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (*GetReportReply, error)
}

type reportClient struct {
	cc *grpc.ClientConn
}

func NewReportClient(cc *grpc.ClientConn) ReportClient {
	return &reportClient{cc}
}

func (c *reportClient) AddReport(ctx context.Context, in *AddReportRequest, opts ...grpc.CallOption) (*AddReportReply, error) {
	out := new(AddReportReply)
	err := c.cc.Invoke(ctx, "/report.Report/AddReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportClient) GetReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (*GetReportReply, error) {
	out := new(GetReportReply)
	err := c.cc.Invoke(ctx, "/report.Report/GetReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServer is the server API for Report service.
type ReportServer interface {
	// Get Report
	AddReport(context.Context, *AddReportRequest) (*AddReportReply, error)
	GetReport(context.Context, *GetReportRequest) (*GetReportReply, error)
}

// UnimplementedReportServer can be embedded to have forward compatible implementations.
type UnimplementedReportServer struct {
}

func (*UnimplementedReportServer) AddReport(ctx context.Context, req *AddReportRequest) (*AddReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddReport not implemented")
}
func (*UnimplementedReportServer) GetReport(ctx context.Context, req *GetReportRequest) (*GetReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReport not implemented")
}

func RegisterReportServer(s *grpc.Server, srv ReportServer) {
	s.RegisterService(&_Report_serviceDesc, srv)
}

func _Report_AddReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServer).AddReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/report.Report/AddReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServer).AddReport(ctx, req.(*AddReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Report_GetReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServer).GetReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/report.Report/GetReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServer).GetReport(ctx, req.(*GetReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Report_serviceDesc = grpc.ServiceDesc{
	ServiceName: "report.Report",
	HandlerType: (*ReportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddReport",
			Handler:    _Report_AddReport_Handler,
		},
		{
			MethodName: "GetReport",
			Handler:    _Report_GetReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/report/report.proto",
}
